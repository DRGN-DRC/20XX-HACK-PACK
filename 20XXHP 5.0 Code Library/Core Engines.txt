Custom Text Struct Engine
1/2/17
- last change was bitflags
[Achilles]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
1.02 ----- 0x80302620 --- 83EDB778 -> Branch

3C608037 6063D970
7C6803A6 38600000
4E800021 3C608030
60632164 7C6803A6
4E800021 3C608000
808336D0 2C040000
4182006C A0A336CC
1CA50008 38A536E0
7C652B78 90850004
A08336CE B0850002
3C808030 60842BB0
7C8803A6 806336D0
4E800021 3C608030
60632D4C 7C6803A6
3C608000 808336D4
806336D0 38A00000
B0A30006 4E800021
38600000 3C808000
906436CC 906436D0
906436D4 3BE00000
3C808000 608436E0
1C7F0008 7C832214
80640004 2C030000
418202F8 A0A40002
2C050000 4182001C
38A5FFFF B0A40002
2C050000 4082000C
90A40004 480002D4
2C1F0000 40820134
3821FFF4 93E10008
3BE00000 3821FFF4
90610008 38800000
B0830006 3CA0804A
60A589B0 1C9F000C
7CA52214 88C50003
7CC60774 88A50002
7CA50774 48000061
7CE802A6 3C808030
60842D4C 7C8803A6
7CE43B78 4E800021
80610008 48000054
4E800021 4A583A20
25372E34 664A593A
2025372E 34660A43
583A2025 372E3466
43593A20 25372E34
660A4C3A 2025382E
3666523A 2025382E
36660000 4E800021
583A2533 6420593A
2533640A 00000000
3C80804C 60841FAC
1CBF0044 7C842A14
C0240020 C0440024
C0640028 C084002C
C0A40030 C0C40034
4BFFFF89 7CE802A6
3C808030 60842D4C
7C8803A6 7CE43B78
4CC63242 4E800021
3C608030 606322BC
7C6803A6 80610008
3821000C 7C7E1B78
4E800021 3BFF0001
807E0030 2C030000
40A2FEEC 83E10008
3821000C 4800019C
2C1F0004 40820174
3821FFF4 93E10008
3BE00000 3821FFF4
90610008 3C808030
60842BB0 7C8803A6
4E800021 80610008
3CC08000 80863B70
88C63B74 1CBF0030
7C842A14 88A40003
2C050009 41820118
38E00000 B0E30006
80E40024 7C06F800
40820008 80E40028
90E30014 80C4002C
90C30010 A0C40000
B0C30004 80C40020
90C30000 2C050000
41820094 2C050002
40820034 80A40010
88A50000 88C40002
2C060000 41820010
7CC52839 41820008
38A00001 1CA50004
80C4000C 7CA5302E
4800005C 2C050003
40820010 80A40010
80A50000 48000048
2C050004 40820010
80A40010 A0A50000
48000034 2C050005
40820010 80A40010
88A50000 48000020
2C050008 40820010
80A40010 C0250000
48000008 48000084
4CC63242 80840008
3D808030 618C2D4C
7D8803A6 4E800021
3C608030 606322BC
7C6803A6 80610008
3821000C 7C7E1B78
4E800021 3BFF0001
7FC3F378 4BFFFEC0
83E10008 3821000C
48000038 80610008
3821000C 83E10008
3821000C 48000024
38800000 3CA08000
60A53ACC 7C051800
4082000C 3C808000
60843B00 48000015
3BFF0001 2C1F0017
40A2FCE8 4800009C
7C0802A6 90010004
9421FFE0 93E1001C
93C10018 90810014
7C7F1B78 80810014
2C040000 4182001C
38A00000 B0A30006
3D808030 618C2D4C
7D8803A6 4E800021
3D808030 618C22BC
7D8803A6 7FE3FB78
4E800021 7FE3FB78
81830028 2C0C0000
41820014 3D808030
618C2BB0 7D8803A6
4E800021 807F0030
2C030000 40A2FF9C
80010024 83E1001C
83C10018 38210020
7C0803A6 4E800020
3FE08030 63FF2640
7FE803A6 83EDB778
4E800020 48000000


	-==-


Replay System Engine
- in-game replay recording and playback
- core logic to handle saving and loading
[Achilles]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
1.02 ----- 0x8006af10 --- C03F0620 -> Branch

9421FFC0 BE810008
3E808048 82B49D60
2C150000 4082000C
9ABF000D B2BF000E
7C791B78 48000591
7C9D2378 4800053D
1C83000C 7F84E850
1F430010 7F9AE050
807F0000 48000549
1F630010 38830001
1C84000C 7FA4E850
3A800000 929D0008
3E808047 8294B6C4
3A94007B 2C14007B
40820030 3E808048
82949D60 2C140000
40820020 929D0000
929D0004 3EA08040
82B5AF54 2C150001
40820008 9ABF000F
82BD0000 82DD0004
56D6023E 8AFF000F
2C170001 418202D4
2C170000 41820558
7C14A800 40800024
8AFD0004 56F80631
418202B4 3B000000
53173E30 9AFD0004
7E95A378 92BD0000
7EF6AA14 7C14B800
40800294 48000361
88780000 546306B5
41820038 A078000C
809F0010 7C032000
40820014 A078000E
A09F0894 7C032000
41820098 38600080
987D0004 3AB50001
92BD0000 48000084
3C608040 8063A318
2C030000 41820028
887F221A 5463DFFF
4182001C 887D0004
54630631 41820010
3AB50001 92BD0000
48000050 480002E9
88780000 546306F7
41820040 3C608032
606357C4 7C6803A6
4E800021 3C808040
8084AF58 2C040064
41820020 1C840147
7C032000 41800014
38600080 987D0004
3AB50001 92BD0000
4800029D 88780000
54630739 4182002C
3C608002 60634030
7C6803A6 3C608040
8063A314 9421FFC0
BE810008 4E800021
BA810008 38210040
88780000 5463077B
4182002C 3C608000
606337E0 80630008
2C030000 41820018
88830000 2C040000
4182000C 38800001
98830001 88780000
546307BD 4182001C
8AFD0004 62F70080
9AFD0004 929D0000
7F98E378 7F18DA14
82F80008 92EDA8F0
A2F80002 88780000
546307FF 4182000C
38800000 509706F6
48000201 2C030000
41820094 B2FF1A8A
88780001 987F1A90
80780004 907F1A8C
3C60800A 60631904
7C6803A6 7FE3FB78
4E800021 D03F0650
3C60800A 60631994
7C6803A6 7FE3FB78
4E800021 D03F0638
3C60800A 60631A24
7C6803A6 7FE3FB78
4E800021 D03F063C
3C60800A 606317E4
7C6803A6 7FE3FB78
4E800021 D03F0620
3C60800A 60631874
7C6803A6 7FE3FB78
4E800021 D03F0624
48000074 B2F90002
38600000 9879001D
88780001 9879001C
7C630774 480001E5
D03F0650 88780004
98790018 7C630774
48000205 D03F0620
88780005 98790019
7C630774 480001F1
D03F0624 88780006
9879001A 7C630774
480001DD D03F0638
88780007 9879001B
7C630774 480001C9
D03F063C 931D0008
38600000 3C808048
98649D68 48000290
7C14A800 4180001C
7EF6AA14 7C14B800
41810010 41820014
7ED5A050 4800000C
929D0000 3AC00000
7EF6D1D6 7F17E050
7F18DA14 480001F9
7C181800 40810250
3AD60001 92DD0004
3EE08048 8AF79D68
56F707FE 9AF80000
82EDA8F0 92F80008
807F0010 B078000C
A07F0894 B078000E
48000071 2C030000
41820030 887F1A90
889F1A91 7C032000
40800008 7C832378
98780001 A2FF1A8A
B2F80002 82FF1A8C
92F80004 48000020
C03F0650 48000095
98780001 A2F90002
B2F80002 82F90018
92F80004 931D0008
480001C4 7ED5A050
7EF6D1D6 7F17E050
7F18DA14 4E800020
7C0802A6 90010004
9421FFF8 3C60800A
60632040 7C6803A6
7FE3FB78 9421FFC0
BE810008 4E800021
BA810008 38210040
8001000C 38210008
7C0803A6 4E800020
6C638000 3C804330
C8628B90 90820000
90620004 C8420000
EC421828 4E800020
7C0802A6 90010004
9421FFF8 3C60804C
88631F9F 4BFFFFCD
EC2100B2 FC20081E
D8220000 80620004
8001000C 38210008
7C0803A6 4E800020
7C0802A6 90010004
9421FFF8 4BFFFF9D
FFE01090 3C60804C
88631F9F 4BFFFF8D
EC3F1024 8001000C
38210008 7C0803A6
4E800020 7C0802A6
90010004 9421FFF8
4BFFFF69 FFE01090
3C60804C 88631F9E
4BFFFF59 EC3F1024
8001000C 38210008
7C0803A6 4E800020
806DC18C 80830020
38A00000 38A50001
80840008 2C040000
40A2FFF4 7CA32B78
4E800020 808DC18C
80A40020 38800000
7C051800 41820010
38840001 80A50008
4BFFFFF0 7C832378
4E800020 38600000
3CC08043 60C618AC
38C6000C 81260000
80E60004 81060008
2C090000 40820018
2C070000 40820010
2C080000 40820008
48000024 7D083A14
88E60004 2C070000
4182FFC8 7C081840
4180FFC0 7D034378
4BFFFFB8 808DBCD0
4E800020 BA810008
38210040 C03F0620
48000000


	-==-


Replay System - Save/Load System Buttons
- saves/loads default system buttons on stack at start and end of  Player_ControllerToDataOffset function.
- mainly for TE Input Display Integration
[Achilles]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
1.02 ----- 0x8006B820 --- 38210078 -> Branch

80E1007C 81210080
3D008048 91289D68
39000000 39210084
7D48482E 7D48392E
39080004 2C080044
40A2FFF0 800100CC
382100C8 48000000


1.02 ----- 0x8006AD18 --- 9421FF88 -> Branch

9421FF38 80E3002C
88E70618 1CE70044
3D00804C 390821CC
7CE74214 90E1007C
3D008048 81089D68
91010080 39000000
39210084 7D48382E
7D48492E 39080004
2C080044 40A2FFF0
48000000


	-==-


20XX 4.06 Save State Engine
[Achilles]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
1.02 ----- 0x802259ec --- 83C10020 -> Branch

3821FFF4 3CA08048
80A59D60 2C050000
40A20010 38600000
3C808000 986437CC
480006BD 2C030000
41820788 3CA08040
80A5A3D8 2C050000
41820778 3C808000
886437CC 2C030000
40A20058 48000691
7C7F1B78 48000669
3C808000 986437CC
1C632458 3D808037
618CF1E4 7D8803A6
4E800021 3C808000
608437D0 1CBF0010
7C842A14 90640008
38800000 98830000
98830001 3BFFFFFF
2C1F0000 40A2FFB8
3CC08048 88C69D68
54C607BD 40820704
3CC08047 80C6B6C4
2C060000 418206F4
4800061D 2C030000
418206E8 7C7F1B78
3BC00000 7FC3F378
48000629 3CA08000
60A537D0 1CDF0010
7CA53214 80C50008
90C10008 88E60001
2C070001 41820084
2C1F0001 40820030
3CE08040 80E7AF4C
2C070000 41820020
3CE08047 80E7B6C4
2C070001 41800010
88E60000 2C070000
418203F0 A0C50000
7C033000 40820010
A0C50002 7C043000
418203FC A0C50004
7C033000 40820010
A0C50006 7C043000
41820020 3BDE0001
2C1E0004 40A2FF68
3BFFFFFF 2C1F0000
40A2FF58 48000634
4800053D 3C808000
888437CC 7C032000
408204F8 80610008
88830000 2C040000
418204E8 38A00000
98A30001 80830004
3CA08048 88A59D68
54A507FF 4082000C
88A30002 48000018
38A00000 88C30002
2C060001 41820008
38A0FFFF 7C842A14
3CC08047 9086B6C4
38630004 3C808040
8084AF48 2C040000
4082000C 38630008
48000030 84830004
A4C30004 7CC62A14
2C06FFFF 4082000C
38C0003B 38840001
3CE08046 60E7B6C8
90870000 B0C70004
3C808045 60842C70
38A00080 84C30004
94C40004 38A5FFFC
2C050000 40A2FFF0
806DC18C 80630020
3FE0800D 63FF4F24
7FE803A6 7C7F1B78
38800001 4E800021
3C608007 6063ED2C
7C6803A6 807F002C
4E800021 3C608006
60638354 7C6803A6
7FE3FB78 4E800021
80C10008 38C60090
807F002C 480003F5
1CA523C8 7CC53214
808600B0 908300B0
808600B4 908300B4
808600B8 908300B8
8086002C 9083002C
808600E0 908300E0
C0260894 C046089C
C06608A4 7FE3FB78
80860010 38A00000
3CC08006 60C693AC
7CC803A6 38C00000
4E800021 80C10008
38C60090 807F002C
48000389 1CA523C8
7CC53214 38C6FFFC
3863FFFC 38E00000
2C07000C 40820010
A0A6000D B0A3000D
48000038 2C070560
4180000C 2C070610
41800028 2C070618
41820020 2C071974
41820018 2C0721FC
41820010 84A60004
94A30004 4800000C
38C60004 38630004
2C072384 4182000C
38E70004 4BFFFFA4
38C6FFFC 807F002C
80E30890 84860004
90870008 84860004
909F0020 84860004
909F0024 8883000C
1C840E90 3CA08045
60A53138 7C842A14
84A60004 90A4FFA8
84A60004 90A4FF54
84A60004 90A4FFD4
38A00000 84E60004
94E40004 38A50001
2C05000B 40A2FFF0
807F0008 2C030000
40A2FE60 3BE00000
3CE08045 60E73080
1CBF0E90 7CE72A14
80670008 2C030003
418200F8 3C608040
8063AF6C 2C030000
41820088 39000000
3C608040 8063A31C
3C808040 8084A288
7C041800 40810010
39000001 7C632050
38630001 3C808038
60840580 7C8803A6
4E800021 2C080000
41820010 3C808040
8084A31C 7C632214
B0670060 C8628B90
D8620020 B0620026
C8220020 EC211828
808700B0 8084002C
D0241830 808700B4
2C040000 4182000C
8084002C D0241830
3C60804A 606310C8
1C9F0064 7C841A14
3D808016 618CB094
7D8803A6 4E800021
2C030000 4182001C
88A7008E 2C050000
40820010 38A00080
98A40010 48000024
88A40010 54A50631
41820018 7FE3FB78
3C80802F 60846E1C
7C8803A6 4E800021
3BFF0001 2C1F0006
40A2FEE8 48000168
48000201 2C030001
41820288 48000191
3C808000 888437CC
7C032000 40820274
48000030 480001DD
2C030001 4182013C
4800016D 3C808000
888437CC 7C032000
40820128 3C60804D
3880005C 90836B94
80610008 38800001
98830000 3CA08048
88A59D68 54A507FE
98A30002 3CA08047
8085B6C4 94830004
3C808046 6084B6C8
80A40000 94A30004
80A40004 94A30004
3C808045 60842C70
38A00080 84C40004
94C30004 38A5FFFC
2C050000 40A2FFF0
80C10008 38C60090
806DC18C 83E30020
807F002C 7C641B78
3884FFFF 38C6FFFF
38E02384 38E7FFFF
8CA40001 9CA60001
2C070000 4182000C
38E7FFFF 4BFFFFEC
38C6FFFD 80E30890
80E70008 94E60004
80FF0020 94E60004
80FF0024 94E60004
8883000C 1C840E90
3CA08045 60A53138
7C842A14 80A4FFA8
94A60004 80A4FF54
94A60004 80A4FFD4
94A60004 38A00000
84E40004 94E60004
38A50001 2C05000B
40A2FFF0 38C60004
83FF0008 2C1F0000
40A2FF60 4800012C
3C60804D 388000AF
90836B94 4800011C
80ADC18C 80E50020
38A00000 7C07F800
41820010 38A50001
80E70008 4BFFFFF0
4E800020 806DC18C
80830020 38600000
38630001 80840008
2C040000 40A2FFF4
4E800020 38600000
3C808000 608437D0
84A40010 2C050000
4182000C 38630001
4BFFFFF0 4E800020
1CA30044 3C80804C
60841FAC 7C842A14
A0640002 A084000A
7C632278 4E800020
806DC18C 80830020
38600001 8084002C
80A40010 80C40004
2C06000D 40820014
80C4223C 2C060000
40820064 48000024
2C060006 4182000C
2C060014 40820014
80C42238 2C060000
40820044 48000004
2C05000C 41820038
2C05000D 41820030
2C050142 41820028
2C050143 41820020
2C050144 41820018
80840000 80840008
2C040000 40A2FF88
38600000 4E800020
3821000C 8001002C
83E10024 83C10020
48000000


	-==-


Smash.gg Slippi Stats
- uses debug flag @ 80003364 (flag value does not save to memory card)
[Fizzi, Achilles]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 --- 0x8006C0D4 ---- BB410068 -> Branch

3F408000 835A3364
2C1A0000 41A20314
9421FFC0 BE810008
3C608016 6063B558
7C6803A6 4E800021
2C030003 40800240
3BC00003 3C608045
60633130 1C9E0E90
7C632214 80630000
2C030000 40820010
3BDEFFFF 2C1E0001
4080FFDC 38630060
7C032800 40820208
3C60801A 60634340
7C6803A6 3C608048
88639D30 4E800021
2C030001 418201E8
3C608047 8063B6C4
3C808048 80849D58
2C040000 408200AC
2C030000 40820084
480001D1 38600037
480001E5 3FE08045
63FFAC4C A07F001A
48000201 3BC00000
3C608045 60633130
1C9E0E90 7C632214
80630000 2C030000
41820034 7FC3F378
480001AD 3FE08045
63FFAC4C 1C9E0024
7FFF2214 887F006C
48000195 887F006D
4800018D 887F006F
48000185 3BDE0001
2C1E0004 4180FFAC
480001F1 48000148
48000151 38600039
48000165 3C608047
8863B6A0 48000159
480001D1 48000128
2C030000 41820120
3C608045 886330C9
2C030000 41820110
48000119 38600038
4800012D 3C608047
8063B6C4 48000179
3C60804D 80635F90
4800016D 3BC00000
3C608045 60633080
1C9E0E90 7FA32214
887D000C 5463103A
7C9D1A14 83E400B0
2C1F0000 418200B0
83FF002C 807F0004
480000DD 807F0010
48000101 807F00B0
48000125 807F00B4
4800011D 807F0620
48000115 807F0624
4800010D 807F0638
48000105 807F063C
480000FD 807F0650
480000F5 807F065C
480000ED 807F1830
480000E5 807F1998
480000DD 807F208C
4800007D A07F2090
48000075 807F18C4
4800006D 887D008E
48000065 3FE0804C
63FF1FAC 1C7E0044
7FFF1A14 A07F0002
48000079 807F0030
4800009D 807F0034
48000095 3BDE0001
2C1E0004 4180FF24
480000A9 BA810008
38210040 480000AC
3D60CC00 A14B4010
614A00FF B14B4010
394000B0 914B6814
4E800020 3D60CC00
39400009 5463C00E
906B6824 914B6820
814B6820 714A0001
4082FFF8 806B6824
5463463E 4E800020
3D60CC00 39400019
5463801E 906B6824
914B6820 814B6820
714A0001 4082FFF8
806B6824 5463843E
4E800020 3D60CC00
39400039 906B6824
914B6820 814B6820
714A0001 4082FFF8
806B6824 4E800020
3D60CC00 39400000
914B6814 4E800020
BB410068 48000000

--------------- 0x364 -------

00000000

 -> 

# Flag reservation
00000000


	-==-


Magus Physics Display
- Main code setting the float values, with additions by Achilles
[Magus, Achilles]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 ---- 0x38F80C ----- C0CDC1CC -> Branch

# Original main code portion
9421FFC0 BE810008
90610038 9081003C
3FE08032 63FFED8C
8BDF0000 2C1E0001
4180000C 2C1E0004
40A10008 3BC00001
9BDF0000 1E9E2B67
929F0004 829F0008
2C140000 40A20010
3E800006 62940A00
929F0008 3A803030
3AA06666 3EC06666
62D63030 3FA08040
63BDA49E B2BD001C
B2BD0020 B2BD002E
B29D0038 92DD003A
B29D0046 92DD0048
92DD0054 B2BD0058
92DD0062 B2BD0066
3BFF0007 3F808049
639CFAB0 837C0004
2C1B0001 41A00034
2C1B0003 41A1002C
831C0000 7F1FD9AE
1EFB001C 3B17000E
7EBDBB2E 7EBDC32E
3AF70002 3B180002
7EDDB92E 7EDDC12E
3A800000 92820018
7C5A1378 3B200001
3FA08045 63BD22A0
1EBE0E90 7FBDA82E
2C1D0000 41820618
83BD002C 2C1D0000
4182060C 7F1FC8AE
82FD0010 2C180000
418200D0 2C180004
40810168 2C180005
4182016C 2C180009
40810170 2C18000C
408101A8 2C18000F
408101C4 2C180013
408101D0 2C180014
418201F8 2C180015
418201FC 2C180016
41820210 2C180017
41820390 2C180018
418203B4 2C180019
418203CC 2C18001A
418203E0 2C180022
408103E4 2C18002B
41820418 2C18002C
4182041C 2C18002D
418204B4 2C18002E
418204B8 2C1800D0
418204D0 2C1800D1
418204E8 2C1800D2
41820028 2C1800D3
41820008 48000548
82DD1A54 C03D196C
FC20081E D8220020
82E20024 48000508
7C19D800 40A20088
3ABCFF3E 3B1CFF8E
A6D50014 3AE00104
7ED7B879 40820068
A2F50008 56F7077B
41A2005C 7C9FC8AE
2C0400D2 4082002C
3C608047 8063B6C4
3EE08033 8097EE88
7C841850 9077EE88
56C305EF 41A20030
9097EE8C 48000028
C0220018 C0420018
56D705EF 41A20008
C04281B0 D03D00B0
D05D00B4 D03D06F4
D05D06F8 7C15C000
4180FF88 7EDFC8AE
2C1600D2 4182042C
3ADD00B0 48000458
3ADD0774 3AB8FFFF
48000444 82DD088C
3AE00000 48000450
3ADD0080 41820010
3AB8FFFA 1EB5000C
48000428 C0360000
C0560004 C076000C
C0960010 C0B60018
C0D6001C EC21182A
EC21282A EC42202A
EC42302A 48000440
3EC0804C 62D61F88
1EBE0044 7ED6AA14
8AB60021 2C1500FF
4182041C 3AB8FFF6
480003D4 3ADD0620
40A20008 3AD60020
3AB8FFF3 480003C0
3AB8FFF0 7EBDAA14
3AC00683 2C180011
4081000C 3AB50004
3AC00684 7EF5B0AE
8AD5067F 40A00008
3AE00000 480003A8
C03D1830 C05D1A4C
480003CC C0420018
82DD221C 56D5018D
41A20008 C05D2340
C03D195C 480003B0
82DD221C 56D5018D
41A2039C 8ADD221A
2C160000 41820390
3821FFD0 82DD0620
92C10008 82DD0624
92C1000C 82DD008C
92C10010 82DD0090
92C10014 82C20000
92C10020 82C20004
92C10024 82C20008
92C10028 82C2000C
92C1002C C03D0090
C05D008C 480000B1
D0210018 3EC0804C
62D61F88 1EBE0044
7ED6AA14 C0360000
480000D5 D03D0620
C0360004 480000C9
D03D0624 7FA3EB78
9421FFC0 BE810008
3D808008 618CE5A4
7D8803A6 4E800021
BA810008 38210040
C03D0090 C05D008C
48000055 FC400890
C0210018 82C10008
92DD0620 82C1000C
92DD0624 82C10010
92DD008C 82C10014
92DD0090 82C10020
92C20000 82C10024
92C20004 82C10028
92C20008 82C1002C
92C2000C 38210030
4800029C 7C0802A6
90010004 9421FFC0
BE810008 3D808002
618C2C30 7D8803A6
4E800021 C0428AF0
EC401030 FC2100B2
80010044 BA810008
38210040 7C0803A6
4E800020 C0420018
FC011040 4080000C
FC600850 48000008
FC600890 82EDAEB4
C0570000 FC031040
4C401382 40820008
C0220018 4E800020
2C1700B5 40A20218
C03D0894 C05D089C
C0628F38 C0828B98
EC230828 EC211024
EC63202A EC431024
480001FC C03D1998
2C1700B2 41A001EC
2C1700B6 418101E4
82BD19C0 C0550058
480001DC 2C1700B2
41A001CC 2C1700B6
418101C4 C03D2344
C05D2348 480001C0
82DD1990 82FD1994
48000184 3ADD0960
3B18FFE5 3AE00002
7EB8BBD6 1EB50138
7ED6AA14 82B6FFB4
2C150000 41A20188
3AF60004 571507FF
41A20148 3AD60008
3AF6FFC8 4800013C
8ADD1968 8AFD1969
4800013C 3AC00000
3AE00000 807D0004
2C030012 41820050
2C030015 41820034
2C03001A 41820040
2C030009 4082001C
C03D2230 82FD2240
2C170001 4082012C
C0428954 48000128
2C030000 40820010
82DD2234 82FD2238
480000E4 2C030011
4082000C 82DD222C
480000D4 2C030010
40820010 82DD223C
82FD2234 480000C0
2C030018 4082000C
82DD2234 480000B0
2C030004 408200A8
82DD22F8 82FD22F0
4800009C 82DD2064
3AE00000 48000090
3C60804A 3863E6C8
C0030014 C023007C
EC21002A C0430080
EC42002A 480000A0
3C60804A 3863E6C8
C0030010 C0230074
EC21002A C0430078
EC42002A 48000080
82DD0014 48000048
3C608047 8063B6C4
3EE08033 82D7EE88
7ED61850 2C160000
4080000C 3AC00000
92D7EE88 82F7EE8C
4800001C 1EB50008
7ED6AA14 3AF60004
C0360000 C0570000
48000034 C8628B90
D8620020 D8620028
B2C20026 B2E2002E
C8220020 C8420028
EC211828 EC421828
4800000C C0220018
C0420018 D03A0000
D05A0004 3B390001
3B5A0008 2C190003
4081F9D4 C0220000
C0420004 C0620008
C082000C C0A20010
C0C20014 80610038
8081003C BA810008
38210040 48000000

-------------- 0x1A1610 ----- 4BFC0999 -> Branch

# Increment Player ID/CPU stat view toggle
3D808032 618CED8C
894C0000 394A0001
2C0A0005 41A00008
39400000 994C0000
41A0001C 3D808016
618C53C8 7D8803A6
4E800021 38000000
900DB088 4BE75C60

-------------- 0x222C60 ----- 90040000 -> Branch

# Move Pokemon Setting Down
2C000001 41A00020
2C000004 41A00008
38000003 3D408032
614AED93 7D2A00AE
913F0060 90040000
4BEF7284

-------------- 0x222C98 ----- 90040000 -> Branch

# Move Pokemon Setting Up (keep from going past 4)
2C000001 41A0001C
2C000003 41A10014
3D408032 614AED93
7D2A00AE 913F0060
90040000 4BEF7294

-------------- 0x222BA0 ----- 90030000 -> Branch

# Max Item Setting Value
2C0000D3 41810008
90030000 4BEF718C

-------------- 0x222CDC ----- 28000002 -> Branch

# Different Text Type (& red text, black bg)
38000002 3C60804A
60631FD8 906DB498
39E00190 91E30000
3DE04128 91E30008
3DE04190 91E3000C
39E000FF 91E30010
3DE0FF00 61EF00FF
91E30014 28000002
4B000000

-------------- 0x1A1614 ----- 38000000900DB088 -> 60000000 # li	r0,0	-> nop
60000000 # li	r0,0	-> nop
-------------- 0x32BA60 -----

83C10018 7C0803A6
83A10014 38210020

 -> 

00000000464C41470000000000000000 # FLAG, for the main "frame stopwatch" feature

-------------- 0x3E77A8 -----

43617073 756C6520
00000000 426F7820
20202020 00000000
54617275 20202020
00000000 45676720
20202020 00000000
4B757375 64616D61
00000000 54617275
43616E6E 00000000
426F6D62 48656920
00000000 446F7365
69202020 00000000
48656172 74202020
00000000 546F6D61
746F2020 00000000
53746172 20202020
00000000 42617420
20202020 00000000
53776F72 64202020
00000000 50617261
736F6C20 00000000
47205368 656C6C20
00000000 52205368
656C6C20 00000000
4C204775 6E202020
00000000 46726565
7A652020 00000000
466F6F64 73202020
00000000 4D53426F
6D622020 00000000
466C6970 70657220
00000000 53205363
6F706520 00000000
53746172 526F6420
00000000 4C697053
7469636B 00000000
48617269 73656E20
00000000 4620466C
6F776572 00000000
4B696E6F 6B6F2020
00000000 444B696E
6F6B6F20 00000000
48616D6D 65722020
00000000 57537461
72202020 00000000
53634261 6C6C2020
00000000 52616262
69744320 00000000
4D657461 6C422020
00000000 53707963
6C6F616B 00000000
4D204261 6C6C2020
00000000

 -> 

# Custom debug text, set 1 (replaces item names)
544F502D4E202858
2F5920434F4F5244494E415445532900
454342204449414D4F4E4420544F5000
454342204449414D4F4E4420424F5454
4F4D00454342204449414D4F4E442052
4947485400454342204449414D4F4E44
204C4546540054494D4552202D204543
4220424F54544F4D2055504441544500
464F52434520313A2043484152414354
45522056454C4F4349545900464F5243
4520323A204B4E4F434B4241434B2056
454C4F4349545900464F52434520333A
20534849454C44204B422056454C4F43
49545900544F54414C2056454C4F4349
54590053595354454D20582F59204449
52454354494F4E414C20494E50555400
53595354454D20582F5920432D535449
434B20494E5055540053595354454D20
414E414C4F47204C2F52004449524543
54494F4E414C20494E505554202D2054
484953204652414D4500444952454354
494F4E414C20494E505554202D205052
4556204652414D4500534849454C4420
494E505554202D43555252454E542041
4E4420505245560054494D4552202D20
414E5920534849454C4420494E505554
000000000000000000000000

-------------- 0x3E794C -----

803EA7A8 803EA7B4
803EA7C0 803EA7CC
803EA7D8 803EA7E4
803EA7F0 803EA7FC
803EA808 803EA814
803EA820 803EA82C
803EA838 803EA844
803EA850 803EA85C
803EA868 803EA874
803EA880 803EA88C
803EA898 803EA8A4
803EA8B0 803EA8BC
803EA8C8 803EA8D4
803EA8E0 803EA8EC
803EA8F8 803EA904
803EA910 803EA91C
803EA928 803EA934
803EA940

 -> 

# Custom info text, pointer table 1
803EA7A8
803EA7C0803EA7D0803EA7E3803EA7F5
803EA806803EA820803EA83C803EA858
803EA874803EA883803EA8A0803EA8B9
803EA8CB803EA8EA803EA909803EA928
803EA9ED803EAA07803EAA1A803EAA70
803EAA8E803EAA27803EAAA6803EAAC5
803EAB0C803EAB27803EAB3F803EAB59
803EAB76803EABE08032C8488032C862
8032C87F8032C899

-------------- 0x3E79D8 -----

546F7361 6B696E74
6F000000 43686963
6F726974 61000000
4D617461 646F6761
73000000 4C697A61
72646F6E 00000000
4B697265 6968616E
61000000 4D617275
6D696E65 00000000
4869746F 64656D61
6E000000 506F7279
676F6E32 00000000
48696E6F 61726173
68690000 46757368
69676962 616E6100
804D4A18 803EA9D8
803EA9E4 804D4A20
804D4A28 803EA9F0
803EA9FC 804D4A30
804D4A38 804D4A40
804D4A48 804D4A50
804D4A58 804D4A60
804D4A68 804D4A70
803EAA08 803EAA14
804D4A78 804D4A80
804D4A88 804D4A90
804D4A98 804D4AA0
804D4AA4 803EAA20
804D4AAC 803EAA2C
803EAA38 804D4AB4
803EAA44 4B757269
626F6820 00000000
4C656164 65616420
00000000 4F637461
726F636B 00000000
4F74746F 73656920
00000000 803EAACC
803EAAD8 803EAAE4
803EAAF0 6F6C642D
4B757269 00000000
4D61746F 20202020
00000000 48656968
6F202020 00000000
4E6F6B6F 6E6F6B6F
00000000 50617461
70617461 00000000
6C696B65 6C696B65
00000000 6F6C642D
6C656164 00000000
6F6C642D 6F637461
00000000 6F6C642D
6F74746F 00000000
77686974 65626561
00000000 6B6C6170
20202020 00000000
7A677368 656C6C20
00000000 7A727368
656C6C20

 -> 

# Custom debug text, set 2
3153542050414952
00000000324E4420504149520054494D
4552202D204449474954414C204C2F52
20494E5055540054494D4552202D204A
554D5020494E5055540054494D455220
2D2055502D42004449205452414A4543
544F525920414E474C45204348414E47
45000000000000000000000000000000
804D4A18803EA9D8803EA9E4804D4A20
804D4A29803EA9F0803EA9FC804D4A30
544F54414C2044414D414745202F2047
52414220484F4C442054494D45004849
544C4147202F204849545354554E2052
454D41494E00534849454C445354554E
2041435455414C202F2043414C43554C
4154454400534849454C44204845414C
5448202F20434F4C4C4953494F4E2053
495A4500000000000000000000000000
0000000000000000000000008032C8B6
8032C8CD8032C8E68032C91E53484945
4C442054494C54204F4646534554202F
20414E474C450054494D4552202D2049
4E54414E47202F20494E56494E430048
4954424F582028302920582F5920434F
4F5244494E41544500484954424F5820
283029205A202F2053495A4520285241
444955532900484954424F5820283129
20582F5920434F4F5244494E41544500
00000000000000000000000000000000
00000000

-------------- 0x3E7BA8 -----

803EAB0C 803EAB18
803EAB24 803EAB30
803EAB3C 803EAB48
803EAB54 803EAB60
803EAB6C 803EAB78
803EAB84 803EAB90
803EAB9C 00000000

 -> 

# Custom info text, pointer table 2
8032C9378032C950
8032C96C8032C988803EAB3C803EAB48
803EAB54803EAB60803EAB6C803EAB78
803EAB84803EAB90803EAB9C803EABF0

-------------- 0x3E7BE0 -----

00000000 00000000
00000000 00000000
00000000 00000000
00000000

 -> 

# Custom debug text, set 3
484954424F5820283129205A202F2053
495A45202852414449555329

-------------- 0x3E7C85 -----

00000049 74656D2D
3E202573 2020506F
6B656D6F 6E

 -> 

# Custom debug text, set 4
4974656D2D3E2025732020
20202020466C6F617473

-------------- 0x161F14 ----- 4803F885 -> Branch

# Coin Mode Bug Fix
# - loads the port number to display (ex. 1111) with an injection code instead of a couple 04 overwrites
3C608033 8063ED90
48000000


	-==-


DI Draw - GX Call, v1.1
- line drawing and mem allocation
- updated with a fix for memory allocation by tauKhan
[Achilles, tauKhan]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 ---- 0x2D0A8 ------ 48338141 -> Branch

9421FFC0 BE810008
3C608048 80639D5C
2C030000 4082002C
3C608000 606334F0
80830000 2C040000
41820018 38800000
9083000C 98830000
38630014 4BFFFFE4
3C608040 8063A3D8
2C030000 418203AC
3BE00000 3C608000
606334F0 1C9F0014
7C841A14 8064000C
2C030000 4082004C
2C1F0000 4082000C
386000C8 48000018
2C1F0001 4082000C
38600010 48000008
386007F0 3D808037
618CF1E4 7D8803A6
4E800021 3CA08000
60A534F0 1C9F0014
7C842A14 9064000C
3BFF0001 2C1F0004
41A0FF94 3BE00000
7FE3FB78 48000305
2C030800 40820038
2C040002 40820030
48000311 7C6802A6
38A00000 80830000
2C040001 41820010
38A000AD 90ADB4F4
38A00001 90A30000
48000010 3BFF0001
2C1F0004 40A2FFB4
480002D9 7C6802A6
80630000 2C030000
418200A4 3BE00000
3C608000 606334F0
1C9F0014 7C641A14
88830000 2C040000
41820078 80A30004
3C808040 8084AF50
2C04FFFF 41820024
7CA52214 3C808047
8084B6C4 7C042800
41800010 38800000
98830000 48000044
3C808047 8084B6C4
80A30010 7C042800
41A0FFE4 2C1F0000
40A20024 7C852050
38840001 88A30001
7C042800 40800010
98830001 38840001
98830000 48000015
3BFF0001 2C1F0004
41A0FF68 4800023C
7C0802A6 90010004
9421FF24 906100DC
DBE100D0 DBC100C8
DBA100C0 DB8100B8
93E100B4 93C100B0
3D808036 618CA288
7D8803A6 4E800021
3D808036 618C5F28
7D8803A6 4E800021
38600000 3D808033
618CD350 7D8803A6
4E800021 3D808033
618CC3C8 7D8803A6
4E800021 38600009
38800001 3D808033
618CBF00 7D8803A6
4E800021 38600000
38800009 38A00001
38C00004 38E00000
3D808033 618CC414
7D8803A6 4E800021
3D808036 618CA288
7D8803A6 4E800021
3881007C 3D808036
618C95F0 7D8803A6
4E800021 38600000
3D808034 618C1510
7D8803A6 4E800021
3861007C 38800000
3D808034 618C1494
7D8803A6 4E800021
80828764 806100DC
80030008 88630003
2C030000 4182000C
3C60FF00 60600000
3861002C 90810040
9001002C 3D808005
618C8ACC 7D8803A6
4E800021 38600001
38800003 38A00000
3D808034 618C0DC0
7D8803A6 4E800021
806100DC 88630002
38800000 3D808033
618CD240 7D8803A6
4E800021 386000B0
38800000 80A100DC
88A50000 3D808033
618CD0DC 7D8803A6
4E800021 806100DC
88830000 7C8903A6
8063000C 3863FFF8
38630008 C0230000
C0430004 3FE0CC01
D03F8000 D05F8000
C0028874 D01F8000
4200FFE0 3860FFFF
3D808036 618C1FC4
7D8803A6 4E800021
800100E0 CBE100D0
CBC100C8 CBA100C0
CB8100B8 83E100B4
83C100B0 382100DC
7C0803A6 4E800020
1CA30044 3C80804C
60841FAC 7C842A14
A0640002 A084000A
7C632278 4E800020
4E800021 00000000
4BFFFFF9 7C6802A6
38800000 90830000
BA810008 38210040
3D808036 618C8608
7D8803A6 4E800021
48000000


	-==-


DI Draw - Various DI Vert Writing
- Pre-SDI / Post-SDI
- Pre-ASDI / Post-ASDI
- Pre-DI / Post-DI
[Achilles]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 ---- 0x8B0E0 ------ 8803221A -> Branch

9421FFF4 90610008
8803221A 5400DFFF
418200D4 3C608040
8063A3D8 2C030000
418200C4 3C808000
608434F0 8064000C
2C030000 418200B0
80610008 C0232340
FC20081E D8220000
80A20004 C023195C
FC20081E D8220000
80C20004 7CA62A14
38A5FFFF 3CC08047
80C6B6C4 7CA53214
80C40004 90A40004
7C053000 4182001C
38A00000 98A40001
98A40000 3CA08047
80A5B6C4 90A40010
80A4000C 88C40001
2C060018 40800040
1CC60008 7CA53214
80C300B0 90C50000
80C300B4 90C50004
88C40001 2C060000
40820010 88C40000
38C60001 98C40000
88C40001 38C60001
98C40001 80610008
3821000C 8803221A
48000000

-------------- 0x8B174 ------ 8001000C -> Branch

881F221A 5400DFFF
4182005C 3C608040
8063A3D8 2C030000
4182004C 3C608000
606334F0 8083000C
2C040000 41820038
88830000 2C040018
4080002C 38840001
98830000 88830001
1C840008 80A3000C
7C842A14 80BF00B0
90A40000 80BF00B4
90A40004 8001000C
48000000

-------------- 0x8B318 ------ 806DAEB4 -> Branch

3C608040 8063A3D8
2C030000 41820060
3C608000 60633504
8083000C 2C040000
4182004C 3CA08047
80A5B6C4 90A30010
38A00002 98A30000
80BF00B0 90A40000
80BF00B4 90A40004
C03F2340 FC20081E
D8220000 80820004
3884FFFF 3CA08047
80A5B6C4 7C842A14
90830004 806DAEB4
48000000

-------------- 0x8B3D4 ------ 801F2344 -> Branch

3C608040 8063A3D8
2C030000 41820028
3C608000 60633504
8083000C 2C040000
41820014 80BF00B0
90A40008 80BF00B4
90A4000C 801F2344
48000000

-------------- 0x8B1A4 ------ 7C7F1B78 -> Branch

9421FFC0 BE810008
7C7F1B78 3C608040
8063A3D8 2C030000
418202C4 3C808000
60843518 8064000C
2C030000 418202B0
807F00E0 2C030000
418202A4 9421FF28
807F00B0 90610020
807F00B4 90610024
807F0080 90610010
807F0084 90610014
C03F0090 D021001C
C05F008C D0410018
3D808002 618C2C30
7D8803A6 4E800021
FFE00890 3D808032
618C6240 7D8803A6
4E800021 D0210008
FC20F890 3D808032
618C63D4 7D8803A6
4E800021 D021000C
C03F2340 FC20081E
D8220000 83C20004
2C1E0001 41810018
3C808000 60843518
3BC00000 9BC40000
48000200 3BDEFFFF
806DC198 2C030000
4182002C 80630010
809F0000 7C032000
41A2001C 8063002C
8883000C 88BF000C
7C052000 41810008
3BDE0001 2C1E00FD
41800008 3BC000FD
7FC903A6 3C808000
60843518 38600000
98640003 7FC3F378
38630001 98640000
3C608047 8063B6C4
90640010 7C63F214
90640004 8084000C
80610020 90640000
80610024 90640004
3BC00001 806DAEB4
C0210018 EC410072
C021001C EC61107A
C0430204 FC031040
40800014 38800000
90810018 9081001C
4800002C C0210008
C0010018 C0430204
EC02007C D0010018
C021000C C001001C
C0430204 EC02007C
D001001C C0210014
C05F016C FC211028
C05F0170 FC401050
FC011040 40800008
FC201090 D0210014
C0210020 C0010018
FC21002A C0010010
FC21002A D0210020
C0210024 C001001C
FC21002A C0010014
FC21002A D0210024
3C808000 60843518
8084000C 1CBE0008
7C852214 C0210020
D0240000 C0210024
D0240004 3D808022
618C4B38 7D8803A6
4E800021 C0010020
FC000840 4181006C
3D808022 618C4B50
7D8803A6 4E800021
C0010020 FC000840
41800050 3D808022
618C4B80 7D8803A6
4E800021 C0010024
FC000840 41800034
3D808022 618C4B68
7D8803A6 4E800021
C0010024 FC000840
40810028 806DAEB4
C00304F0 C021001C
FC010040 40810014
38600001 3C808000
60843518 98640003
3BDE0001 4200FE98
382100D8 7FE3FB78
BA810008 38210040
7C7F1B78 48000000

-------------- 0x8B2D0 ------ 8001005C -> Branch

9421FFC0 BE810008
3C608040 8063A3D8
2C030000 418202C4
3C808000 6084352C
8064000C 2C030000
418202B0 807F00E0
2C030000 418202A4
9421FF28 807F00B0
90610020 807F00B4
90610024 807F0080
90610010 807F0084
90610014 C03F0090
D021001C C05F008C
D0410018 3D808002
618C2C30 7D8803A6
4E800021 FFE00890
3D808032 618C6240
7D8803A6 4E800021
D0210008 FC20F890
3D808032 618C63D4
7D8803A6 4E800021
D021000C C03F2340
FC20081E D8220000
83C20004 2C1E0001
41810018 3C808000
6084352C 3BC00000
9BC40000 48000200
3BDEFFFF 806DC198
2C030000 4182002C
80630010 809F0000
7C032000 41A2001C
8063002C 8883000C
88BF000C 7C052000
41810008 3BDE0001
2C1E00FD 41800008
3BC000FD 7FC903A6
3C808000 6084352C
38600000 98640003
7FC3F378 38630001
98640000 3C608047
8063B6C4 90640010
7C63F214 90640004
8084000C 80610020
90640000 80610024
90640004 3BC00001
806DAEB4 C0210018
EC410072 C021001C
EC61107A C0430204
FC031040 40800014
38800000 90810018
9081001C 4800002C
C0210008 C0010018
C0430204 EC02007C
D0010018 C021000C
C001001C C0430204
EC02007C D001001C
C0210014 C05F016C
FC211028 C05F0170
FC401050 FC011040
40800008 FC201090
D0210014 C0210020
C0010018 FC21002A
C0010010 FC21002A
D0210020 C0210024
C001001C FC21002A
C0010014 FC21002A
D0210024 3C808000
6084352C 8084000C
1CBE0008 7C852214
C0210020 D0240000
C0210024 D0240004
3D808022 618C4B38
7D8803A6 4E800021
C0010020 FC000840
4181006C 3D808022
618C4B50 7D8803A6
4E800021 C0010020
FC000840 41800050
3D808022 618C4B80
7D8803A6 4E800021
C0010024 FC000840
41800034 3D808022
618C4B68 7D8803A6
4E800021 C0010024
FC000840 40810028
806DAEB4 C00304F0
C021001C FC010040
40810014 38600001
3C808000 6084352C
98640003 3BDE0001
4200FE98 382100D8
BA810008 38210040
8001005C 48000000


	-==-


20XX AI Engine Loader
Loads the AI Engine code into the Object Heap (OSHeap 1 / HSD Heap 0) on scene-change. As of 20XX v5, the AI Engine code is stored in the disc filesystem, due to its size, and only loaded during matches.
[DRGN, Punkline]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 --- 0x8016E91C --- 80010024 -> Branch

# Injecting into StartMelee (0x8016E730)
# Source code available in the Source Codes folder
7C0802A6 90010004
9421FF00 BC610008
lis r3, <<AiEngineFileString>>@h
ori r3, r3, <<AiEngineFileString>>@l
38800000
bl <DVD.read>
7C882378 3C608006
6063B008 7CA32050
64A54800 90A30000
7C843214 7CA41850
38A50008 38000012
5005D00A 90A4FFFC
3C608006 6063B008
38800004
bl <data.flush_IC>
7D034378 7CC43378
bl <data.flush_IC>
B8610008 80010104
38210100 7C0803A6
80010024 48000000

<AiEngineFileString>
# "AI_Engine.bin" string
41495F45 6E67696E
652E6269 6E00


	-==-


Frame Speed Modifier Engine
This module contains the engine as well as FSM tables for PAL and SDR.
The PAL table is currently empty, but you may add entries if you'd like.
<https://smashboards.com/threads/melee-hacks-and-you-new-hackers-start-here-in-the-op.247119/post-14773022>
[Magus, Ampers, Achilles, Ripple, DRGN]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 --- 0x80073338 ---- BB610014 -> Branch

# Engine
7F63DB78 8BFE000C
3FA08045 63BD3084
1FFF0E90 7FFDFA14
809F0000 8BFF0008
2C040013 4182001C
2C040012 40A20020
2C1F0001 40A20018
38800013 48000010
2C1F0001 40A20008
38800012 C03E0894
FC20081E D8220000
80A20004 80DE0010
80FE0014 60E78000
83BE0004 1FBD0008
3FE0803C 63FF1F40
7FFFE82E 8BFF0005
2C1F0073 41820018
2C1F0070 40820084
lis r31,<<PAL_FSM_List>>@h
ori r31,r31,<<PAL_FSM_List>>@l
4800000C
lis r31,<<SDR_FSM_List>>@h
ori r31,r31,<<SDR_FSM_List>>@l
3BFFFFF8 87BF0008
2C1D0000 41820060
57BC463E 2C1C00FF
41820014 7C1C2000
4182000C 41810048
4BFFFFDC 57BC863E
7C1C2800 41A1FFD0
57BC043E 7C1C3000
4182000C 7C1C3800
4082FFBC 839F0004
2C1CFFFF 41820018
C03F0004 3FE08006
63FFF190 7FE803A6
4E800021 BB610014
48000000

<SDR_FSM_List> NTSC 1.02
# Active for .sat files
00090165 3EE66666
00000165 40000000
00080160 3FC00000
001400EB 3FC00000
01048045 3F800000
01008045 40000000
03008127 3F99999A
03008128 3F99999A
04078044 3F800000
04008044 40E00000
0504802E 3F800000
0500802E 40000000
05068043 FFFFFFFF
05038043 3F800000
05008043 40400000
05178044 3FA00000
0602802E 3F800000
0600802E 40000000
06328047 3F800000
06088047 3FC00000
06408048 3F800000
06108048 3FAB851F
0B038012 3F933333
0B008013 3F933333
0B00812B 3FC00000
0B00812F 3FC00000
0C008012 3F8CCCCD
110080F2 3F99999A
111480F3 3F99999A
1100812D 3F99999A
11008130 3F99999A
11008131 3F99999A
1504802E 3F800000
1500802E 40000000
1504803B 3F800000
1500803B 40000000
15268042 3F800000
15208042 40000000
15188042 3F800000
15128042 40000000
15198045 3F800000
150C8045 3FC00000
15328047 3F800000
15088047 40000000
15418048 3F800000
15108048 3FC00000
1900803A 3FAB851F
1902803B 3F800000
1900803B 40000000
00000000 00000000

<PAL_FSM_List> NTSC 1.02
# Active for .pat files
0000000000000000


	-==-


Stage Swap Engine (v3.0)
Responsible for checking the current stage select screen and loading the appropriate pre-defined or random stage, as defined by the Stage Swap Info Table.
This also handles some stage file modifications when the file is loaded.

v2.x of this code relocates the Stage Swap Table from the Code Library to a file in the disc filesystem, and fixes random byte overwrites (when using 0xFF byte replacement mode).
v3.x separates out modifications to Battlefield to the new "Battlefield Custom Platform Controller" code.
[Achilles, DRGN]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
NTSC 1.02 ---- 0x3F8C70 ----- 

6174696F 5F31203A 00000000 4F666652
6174696F 5F32203A 00000000 4F666652
6174696F 5F33203A 00000000 4F666652
6174696F 5F34203A 00000000 00000000
00000000 803FBC58 00000000 00000000
00000000 00000000 00000000 00000008
00000000 803FBC6C 00000000 803FA2D0
00000000 40400000 3DCCCCCD 00000008
00000000 803FBC7C 00000000 803FA2D4
00000000 40400000 3DCCCCCD 00000008
00000000 803FBC8C 00000000 803FA2D8
00000000 40400000 3DCCCCCD 00000008
00000000 803FBC9C 00000000 803FA2DC
00000000 40400000 3DCCCCCD 00000009
00000000 00000000 00000000 00000000
00000000 00000000 00000000 3C204465
66656E63 65205261 74696F20 3E000000
44656652 6174696F 5F31203A 00000000
44656652 6174696F 5F32203A 00000000
44656652 6174696F 5F33203A 00000000
44656652 6174696F 5F34203A 00000000
00000000 00000000 803FBD6C 00000000
00000000 00000000 00000000 00000000
00000008 00000000 803FBD80 00000000
803FA2E0 00000000 40400000 3DCCCCCD
00000008 00000000 803FBD90 00000000
803FA2E4 00000000 40400000 3DCCCCCD
00000008 00000000 803FBDA0 00000000
803FA2E8 00000000 40400000 3DCCCCCD
00000008 00000000 803FBDB0 00000000
803FA2EC 00000000 40400000 3DCCCCCD
00000009 00000000 00000000 00000000
00000000 00000000 00000000 00000000
43705470 5F537461 79202000 43705470
5F57616C 6B202000 43705470 5F457363
61706500 43705470 5F4A756D 70202000
43705470 5F4E6F72 6D616C00 43705470
5F4D616E 75616C00 43705470 5F4E616E
61202000 43705470 5F446566 656E7369
76650000 43705470 5F537472 7567676C
65000000 43705470 5F467265 616B2000
43705470 5F436F6F 70657261 74650000
43705470 5F53704C 774C696E 6B000000
43705470 5F53704C 7753616D 75730000
43705470 5F4F6E6C 79497465 6D000000
43705470 5F45765A 656C6461 00000000
43705470 5F4E6F41 63740000 43705470
5F416972 00000000 43705470 5F497465
6D000000 803FBE80 803FBE8C 803FBE98
803FBEA4 803FBEB0 803FBEBC 803FBEC8
803FBED4 803FBEE4 803FBEF4 803FBF00
803FBF10 803FBF20 803FBF30 803FBF40
803FBF50 803FBF5C 803FBF68 3C204370
75205479 7065203E 00000000 54797065
5F5F4331 203A0000 54797065 5F5F4332
203A0000 54797065 5F5F4333 203A0000
54797065 5F5F4334 203A0000 00000000
00000000 803FBFBC 00000000 00000000
00000000 00000000 00000000 00000002
00000000 803FBFCC 803FBF74 803FA300
00000000 41900000 00000000 00000002
00000000 803FBFD8 803FBF74 803FA304
00000000 41900000 00000000 00000002
00000000 803FBFE4 803FBF74 803FA308
00000000 41900000 00000000 00000002
00000000 803FBFF0 803FBF74 803FA30C
00000000 41900000 00000000 00000009
00000000 00000000 00000000 00000000
00000000 00000000 00000000 3C204370
75204C65 76656C20 3E000000 4C657665
6C5F4331 203A0000 4C657665 6C5F4332
203A0000 4C657665 6C5F4333 203A0000
4C657665 6C5F4334 203A0000 00000000
00000000 803FC0BC 00000000 00000000
00000000 00000000 00000000 00000003
00000000 803FC0CC 00000000 803FA310
00000000 41100000 3F800000 00000003
00000000 803FC0D8 00000000 803FA314
00000000 41100000 3F800000 00000003
00000000 803FC0E4 00000000 803FA318
00000000 41100000 3F800000 00000003
00000000 803FC0F0 00000000 803FA31C
00000000 41100000 3F800000 00000009
00000000 00000000 00000000 00000000
00000000 00000000 00000000 5265642D
5465616D 00000000 47726565 6E2D5465
616D0000 426C7565 2D546561 6D000000
803FC1BC 803FC1C8 803FC1D4 3C205465
616D2053 656C6563 74203E00 5465616D
5F31203A 00000000 5465616D 5F32203A
00000000 5465616D 5F33203A 00000000
5465616D 5F34203A 00000000 00000000
00000000 803FC1EC 00000000 00000000
00000000 00000000 00000000 00000002

 ->

# Space reservation (todo: move file to arena?)
3C535441 47455357 41502049 4E464F3E
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000
00000000 00000000 00000000 00000000

NTSC 1.02 ---- 0x258720 ----- 8804000B -> Branch

# Main Logic; looks up data from the
# Stage Swap Table and prepares file loading
9421FFC0 BE810008
7C741B78 8AA4000B
1EF50030 3EC0803F
62D6BC20 7ED6BA14
3EE0803F 8AF70A20
3AF7FFCF 3B17000C
7F18B0AE 3F208040
9B19A2E5 3B170008
7F18B0AE 2C180000
41A2002C 7F15C378
2C15001A 40A20014
3F008040 82B8A280
3AB50021 48000010
2C150015 40A20008
3AA00000 1F170004
3B180010 7F16C02E
2C180000 41820080
3B370020 7F39B0AE
2C190000 41820070
2C1900FF 40820058
2C170000 41820060
38600000 3B200004
7F2903A6 1F370004
3B390020 7F59B0AE
2C1A0000 41820010
38630001 3B390001
4200FFEC 3C808038
60840580 7C8803A6
4E800021 1F370004
3B430020 7F5ACA14
7F3AB0AE 7F03C378
480001A1 9B380000
480001AC 1C95000C
3C60803E 60639960
7C63202E 3C80803E
3884FEDC 5463103A
7F03202E 83180008
2C180000 41820168
3B2000FF 2C150002
40A2000C 3F208040
8339A1DC 2C150003
40A2000C 3F208040
8339A1D4 2C150008
40A2000C 3F208040
8339A1E0 2C15001C
40A2000C 3F208040
8339A1D8 2C15001F
40A2000C 3F208040
8339A1E8 2C150020
40A2000C 3F208040
8339A1E4 3BE00000
2C1900FF 40A20008
480000F4 7F3ACB78
2C19000F 4180001C
3860000F 3C808038
60840580 7C8803A6
4E800021 7C791B78
2C19000A 4080000C
3B390030 48000008
3B390037 7F03C378
3880002E 3CA08032
60A55878 7CA803A6
4E800021 2C030000
40A2000C 38780004
48000008 38630001
3BFF0001 2C1F0001
40820008 48000085
9B230000 7F03C378
9421FFC0 BE810008
3C808001 60846204
7C8803A6 4E800021
3C808033 6084796C
7C8803A6 4E800021
BA810008 38210040
2C03FFFF 4182002C
2C15001F 40A20050
3F40803F 635AA2E5
8B5A0000 575AD7BF
41A2003C 2C190044
41820014 48000018
2C1A000F 41800008
4BFFFF28 3B200000
4BFFFF14 48000018
3CA08040 9065C260
88C30000 98C5C264
4E800020 B2B4001E
3E808025 6294BB48
7E8803A6 BA810008
38210040 4E800020

-------------- 0x14D10 ------ 807E0014 -> Branch

# Stage File Patches.
# This performs file modifications on a stage file
# when it's loaded, for these custom stage features:
#	- FD for long destination and to set custom Debug Menu colors
#	- Pokemon Stadium for instant transform on fixed-form stages

3C80804A 8084E750
2C040025 418200A4
2C040010 40820198
3CA08040 89E5A2E5
55EF0679 41820188
3DC07961 61CE6B75
809E0010 80840004
81E40004 39EF0020
80A40008 1CA50004
7DEF2A14 80A4000C
82040010 7CB02A14
1E250008 7E2F8A14
7E248A14 7DE47A14
820F0004 7E11802E
7C107000 41820014
39EF0008 7C0F8800
40800000 4BFFFFE4
81EF0000 39EF0020
7DC47A14 39E00000
91EE0000 91EE0004
91EE0010 91EE0014
91EE0018 48000100
3DE00009 61EF5335
809E0010 80840004
81C40000 7C0E7800
408200E4 3E008040
89F0A2E5 55EF0631
418200A0 3DE04040
3A200000 6230F488
7DE4812E 6230F4CC
7DE4812E 6230F4D0
7DE4812E 6230F590
7DE4812E 3E000001
62100088 7DE4812E
3E000001 62100608
7DE4812E 3DE04248
6230F4D8 7DE4812E
3E000005 62101B90
7E24812E 3E200005
3DE0C3AA 61EF91EC
62301F20 7DE4812E
3DE043AA 61EF91EC
62301F60 7DE4812E
3DE0C3D0 61EF91EC
62301FA0 7DE4812E
3DE043D0 61EF91EC
62301FE0 7DE4812E
3DE08040 81CFA3A4
2C0E0000 41820028
81CFA3A0 99C47974
99C47B84 81CFA39C
99C47975 99C47B85
81CFA398 99C47976
99C47B86 807E0014
48000000

-------------- 0x80160174 ----- 38600004 -> Branch

# Stage Swap Table Loader
# Loads the StageSwapTable file into the DOL during game bootup.
7C0802A6 90010004
9421FF00 BC610008
4800001C 4E800021
53746167 65537761
70546162 6C652E62
696E0000 4BFFFFE9
7C6802A6 3DC08033
61CE796C 7DC803A6
4E800021 3C80803F
6084BC80 38A00000
38C0FFFF
bl <DVD.read_async>
B8610008 80010104
38210100 7C0803A6
38600004 48000000

-------------- 0x3F9250 -----

00000000 803FC1FC
803FC1E0 803FA2B0
00000000 40400000
00000000 00000002
00000000 803FC208
803FC1E0 803FA2B4

 -> 

# Stage swap undo flag/address storage
5354414745205357415020464C414753
00000000000000000000000000000000
454E4420535441474520535741500000


	-==-


DVD and Archive Functions - Minified
Higher-level DVD IO functions, wrapping the HSD library functions.
This is a reduced (minified and assembled) set of functions for specific functionality, which also contains all required Archive handlers and data functions. See the github repo for the full set of DVD and Archive functionality.
<https://github.com/Punkline/ppc_melee_codefuncs>
[HSD, Punkline]

<DVD.file> NTSC 1.02
# Returns a file entrynum, a path string, a file size, and a dvd offset

# --- args:
# r3 = file
#  - this can be...
#    a file entrynumber -- nearly instant lookup
#    a file offset, for DVD -- slow lookup
#    a file path string pointer -- slowest lookup
#      - recommended -- using a string is the safest choice, and can return entrynums for later use
#        - entrynums and file offsets may otherwise vary based on disk configuration

# --- returns:
# cr1.eq = True if path was invalid
# r3 = file entrynum -- or -1 if invalid
# r4 = file path pointer (static FST -- do not edit, read-only)
# r5 = file size
# r6 = file size (aligned)
# r7 = DVD offset
# r8 = FST entry
# r9 = (given path input argument)

7C0802A6 9421FFE0
90010024 7C0902A6
90010010 BFE10014
7C7F1B79 80CDBBE0
810DBBDC 80EDBBE4
7CE903A6 40A00034
3C008180 7C1F0040
40800010
bl 0x8033796c
2C030000 4080FFD8
4CC63342 3860FFFF
38C00000 38A0FFFF
38C0FFFF 4800005C
7C1F3800 40A1002C
3860FFFF 38E8FFF8
8487000C 7C1F2000
80070004 7CA40214
7C9F2800 4C402842
38630001 4002FFE4
4CC63102 1C03000C
7D080214 80A80008
80880000 80E80004
3805001F 7C843214
54060034 7FE9FB78
BBE10014 80010010
7C0903A6 80010024
38210020 7C0803A6
4E800020


<DVD.read> NTSC 1.02
# DVD outputs a whole file at target location in RAM
# - game will stall while the file is loaded, and continue after finishing

# --- args:
# r3 = file (entrynum, path string pointer, or dvd offset)
# r4 = output location (addr=target, 0=dynamic, 3=persistent, 4=semi-persistent)

# --- returns:
# cr1.eq = warning 'File not found'
# cr1.lt = warning 'File still loading'
# r3  = entrynum
# r4  = output location
# r5  =   0   -- (read offset is always 0 for full loads)
# r6  = read size
# r7  =   -1  -- (sync callback is always blank on synchronous loads)
# r8  =   -1  -- (archive object are not created for non-archive loads)
# r9  = Allocation Metadata
# r10 = path string ()
# r11 =   0   -- (async info object is not available for synchronous reads)
38A00000 38C0FFFF
38E0FFFF 3900FFFF
b <DVD.__read_handler>


<DVD.read_async> NTSC 1.02
# DVD outputs a whole file at target location in RAM over time
# - game will return immediately while file loads
# - you may provide a callback to run once the file has finished loading

# --- function args:
# r3 = file (entrynum, path string pointer, or dvd offset)
# r4 = output location (addr=target, 0=dynamic, 3=persistent, 4=semi-persistent)
# r5 = sync callback (called once DVD has finished ready asynchronously)
# r6 = sync callback arg (optional -- passed to sync callback)

# --- sync callback args:
# r3 = unknown index from 0x4(rAsync) -- sampled from -0x5650(r13) on async creation
# r4 = Copy of arg r6 from function args
# r5 = 0
# r6 = 0 if no error from DVD
# - do not attempt to sync DVD while in the middle of sync callback!

# --- returns:
# cr1.eq = warning 'File not found'
# cr1.lt = warning 'File still loading'
# r3  = entrynum
# r4  = output location
# r5  =   0   -- (read offset is always 0 for full loads)
# r6  = file size
# r7  = sync callback
# r8  =   -1  -- (archive object are not created for non-archive loads)
# r9  = Allocation Metadata
# r10 = path string
# r11 = async file info pointer
7CA72B78 7CC93378
38C0FFFF 38A00000
3900FFFF
b <DVD.__read_handler>


<DVD.async_info> NTSC 1.02
# Returns pointer to a specific element in DVD async event queue, or null if query isn't found
# - async elements are structures that are dynamically linked together when queued
# - as a special case, if Query is -1, then the first element of the queue is returned

# --- args:
# r3 = file, async info, sync callback, or output destination
#    Arg is used to identify one of the async file read info structs in the async queue
#    - if query has a sign bit, it checks the mentioned pointers in each element for a match
#    - otherwise, it will check for a matching entrynumber instead
#      - in cases where a pointer check fails, it is checked for a path string with <DVD.file>
#        - if the path string produces an entrynum, then a second pass is made with the entrynum
#    - if no match is made, then a null is returned and cr1.gt is false

# --- returns:
# cr1.lt = 'not synced'
# cr1.gt = 'match found'
# cr1.eq = 'synced'
# r3 = async info (null if no match)
# r4 = entrynum   (-1 if no match)
# r5 = (given query)

# --- Async Info structure:  - pointed to by returned r3
#    0x00 : POINT : to next info struct in async queue
#    - you may reach every queued read by following these linked pointers
#    0x04 : WORD  : unknown index -- gets passed to sync callback as r3 arg
#    0x08 : WORD  : File Entry Number -- can be input into <DVD.file> for info about the file
#    0x0C : WORD  : File Read Start -- offset of file to begin DVD read at
#    0x10 : POINT : to output destination
#    0x14 : WORD  : File Read Size
#    0x18 : HWORD : flags:
#                 + 0038 = 3-bit, unknown ID:
#                   0020 :  4 unknown (hardcoded by HSD wrapper -- maybe a hardware ID?)
#                 + 0007 = 3-bit, 'Destination' ID:
#                   0001 :  1 Virtual RAM (24MB)
#                   0003 :  3 Auxiliary RAM (16MB)
#    0x1A : HWORD : Error code (?) -- gets passed to sync callback as arg r6
#    0x1C : POINT : to sync callback (or null, if not used)
#    0x20 : WORD  : sync callback argument (or null, if not used) -- passed as arg r4

7C0802A6 9421FFE0
90010024 BFA10010
7FA00026 2C03FFFF
83CDC158 7C7F1B78
40A20014 806DC158
2C830000 4CA42382
48000090 2C1F0000
2C9E0000 4CA52902
40840080 41810060
2C1FFFFF 41820074
48000034 7C1EF800
801E0010 807E001C
7D00F800 801E0020
7D83F800 7E00F800
4CA25382 4CA57382
4CA59382 41850044
83DE0000 2C9E0000
4184FFCC 7FE3FB78
bl <DVD.file>
4BFFFFA0 83DE0000
2C9E0000 40840020
801E0008 7C00F800
4CA21382 41850010
83DE0000 2C9E0000
4184FFE8 7FC3F379
3880FFFF 7FE5FB78
41820008 809E0008
4CC52842 4C863042
7FABF120 BBA10010
80010024 38210020
7C0803A6 4E800020


<DVD.sync_to> NTSC 1.02
# Causes the CPU to stall until a specified file read has finished syncing from DVD->RAM
#  CPU will not stall if no file reads are recognized by arg input
#  CPU stall for ALL pending file reads if arg '-1' is given

# --- args:
# r3 = file, async info, sync callback, or output destination
# - checks each element in async_info queue for matching addresses
# - if one isn't found, input is fed into <DVD.file>, and the entrynums are checked against result
# - if entrynum isn't found in second pass, then no sync is made

7C0802A6 9421FFC0
90010044 BFE10030
3BE10010 7C7FE5AA
80610010
bl <DVD.async_info>
4186000C
bl 0x800195d0
4BFFFFF0 7C7FE4AA
BBE10030 80010044
38210040 7C0803A6
4E800020


<DVD.sync> NTSC 1.02
# Causes the CPU to stall untill all pending file reads are finished syncing from DVD -> RAM
# - no args/returns
3860FFFF
b <DVD.sync_to>


<DVD.__read_handler> NTSC 1.02
# Handles various types of read function inputs with verbose argument interface
# - this is a low level function with a complex, but versatile interface
# - the other DVD.read* funcs are made by wrapping around this function

# --- args:
# r3 = file (entrynum, path string pointer, or dvd offset)
# r4 = output location (addr=target, 0=dynamic, 3=persistent, 4=semi-persistent)
# r5 = file read offset (0 is start)
# r6 = bytes to load
# - offset and bytes are unsigned, and will cap at file boundaries
# r7 = sync callback (0 for none)
# r8 = archive object (-1 for none, else syntax is similar to r4)
# r9 = sync callback arg (optional -- passed to sync callback)

# --- sync callback args:
# r3 = unknown index from 0x4(rAsync) -- sampled from -0x5650(r13) on async creation
# r4 = Copy of arg r9 from function args
# r5 = 0
# r6 = 0 if no error from DVD

# --- returns:
# cr1.eq = warning 'File not found'
# cr1.lt = warning 'File still loading'
# r3  = entrynum
# r4  = output location
# r5  = read offset
# r6  = read size (-1 if unable to load file)
# r7  = sync callback (if applicable)
# r8  = archive object (if applicable)
# r9  = Allocation Metadata
# r10 = path string
# r11 = async file info pointer (if applicable)
# Handles various types of read function inputs with verbose argument interface
# - this is a low level function with a complex, but versatile interface
# - the other DVD.read* funcs are made by wrapping around this function

# --- args:
# r3 = file (entrynum, path string pointer, or dvd offset)
# r4 = output location (addr=target, 0=dynamic, 3=persistent, 4=semi-persistent)
# r5 = file read offset (0 is start)
# r6 = bytes to load
# - offset and bytes are unsigned, and will cap at file boundaries
# r7 = sync callback (0 for none)
# r8 = archive object (-1 for none, else syntax is similar to r4)
# r9 = sync callback arg (optional -- passed to sync callback)

# --- sync callback args:
# r3 = unknown index from 0x4(rAsync) -- sampled from -0x5650(r13) on async creation
# r4 = Copy of arg r9 from function args
# r5 = 0
# r6 = 0 if no error from DVD

# --- returns:
# cr1.eq = warning 'File not found'
# cr1.lt = warning 'File still loading'
# r3  = entrynum
# r4  = output location
# r5  = read offset
# r6  = read size (-1 if unable to load file)
# r7  = sync callback (if applicable)
# r8  = archive object (if applicable)
# r9  = Allocation Metadata
# r10 = path string
# r11 = async file info pointer (if applicable)

7C0802A6 9421FF90
90010074 BE810034
3A810010 7C74E5AA
bl <DVD.file>
90740000 BAF40000
82B40018 3BA00000
3BC00000 3BE00000
418600BC 7C771B78
7C9E2378 7ED92850
7C1AB040 40A10008
7EDAB378 3ADA001F
56D60034 7F03C379
41A0002C 2C030005
40800024 7EC4B378
bl 0x80015bd0
2C1C0002 7C781B78
3BA3FFE0 41A0000C
7C7D1B78 831D0004
7F05C379 38E00023
40A00008 38E00021
7F69DB78 2C09FFFF
40820008 39200000
7EE3BB78 7F24CB78
7EC6B378 39000001
7EAAAB78
bl 0x8038f6d4
2C1BFFFF 40A20020
bl <DVD.sync>
2C1CFFFF 41820020
7F83E378 7F04C378
38A00000
bl <arch.init>
7EE3BB78
bl <DVD.async_info>
7C7F1B78 2C170000
BEF40000 4CC00382
2C1F0000 7C7404AA
4C821042 BA810034
80010074 38210070
7C0803A6 4E800020


<arch.symbol> NTSC 1.02
# Look up a symbol string in a given Archive Object to return the part of the file it represents

# --- args:
# r3 = archive object (or file start)
# r4 = search query (address of string)

# --- returns:
# r3 = address of file section (or 0 if symbol not found)
# r4 = given query

7C0802A6 9421FF90
90010074 BFC10060
7C7F1B78 80BF0040
2C050000 7C9E2378
40800014 801F0000
80A50000 7C002800
41A20048 80C3000C
3BE10010 90DF000C
38830020 80030004
909F0020 7CA40214
80030008 5404103A
7CA52214 80030010
54C61838 90BF0028
54001838 7CA62A14
7C050214 901F0030
7FE3FB78 7FC4F378
bl 0x80380358
7FC4F378 BBC10060
80010074 38210070
7C0803A6 4E800020


<arch.check_init> NTSC 1.02
# Check if an archive file has already been relocated

# --- args:
# r3 = start of archive file

# --- returns:
# r3 = start of archive file
# r4 = start of archive relocation  (null if no reloc table)
# r5 = start of archive data (relocation base address)
# cr1.lt = bInitialized -- a relocated pointer was found
# cr1.gt = bRelocated -- true if bInitiailized OR bNoRelocs
# cr1.eq = bNoRelocs -- true if no pointers need relocation

80030008 80830004
2C800000 38A30020
7C052214 38800000
41860014 7C040378
80040000 7C05002E
2C000000 4C803102
4CA62382 4E800020


<arch.init> NTSC 1.02
# Initialize a newly loaded archive file (DAT or USD file)
# - init will skip already-initialized files to prevent corruption of pointers in data sections
# - if a memory region ID is given instead of an allocation address, an allocation will be generated

# --- args:
# r3 = allocation for writing Archive Object information
# r4 = File start -- to be initialized
# r5 = initialization event symbol dictionary (or 0 for defaults)

# --- returns:
# r3 = instantiated archive object (from given r3)

# --- callback event interface:
# r3 = arch.init.event.rParams -- symbol region, for params
# r4 = arch.init.event.rArch   -- the archive object for this file
# r5 = arch.init.event.rCB     -- address of callback (self -- for local data)

7C0802A6 9421FFD0
90010034 7C000026
90010010 BF610014
7CBC2B79 7C9E2378
4180000C
lis r0, <<arch.dict.init_default_events>>@h
ori r28, r0, <<arch.dict.init_default_events>>@l
7C7F1B79 41A0001C
38800044
bl 0x80015bd0
2C1F0002 7C7F1B78
41A00008 83E30004
7FC3F378
bl <arch.check_init>
41840020 7FE3FB78
7FC4F378 80BE0000
bl 0x80016a54
7F8CE378 7FEBFB78
bl <arch.event>
7FE3FB78 BB610014
80010010 7C0FF120
80010034 38210030
7C0803A6 4E800020


<arch.event> NTSC 1.02
# Pass a dictionary of symbol:callback entries to this handler to trigger them as events

# --- args:
# r3...r9 = (stuff you want to give to each symbol-triggered callback in the event)
# r10 = (unused)
# r11 = archive object (will trigger callbacks for each matching symbol in dictionary)
# r12 = archive symbol event dictionary  (see format below)

# --- dictionary format:
# 0x0 = number of element pointers
# 0x4 = start of n-element table array... (not a pointer)

# --- dictionary element format:
# 0x0 = branch instruction -> callback start
# 0x4 = start of a null-terminated symbol string representing this event
#     - string must be unique for this dictionary, and becomes a key for matching symbol in file

7C0802A6 9421FFA0
90010064 BF610040
7FE00026 3BC10010
7D7B5B78 7C7EE5AA
7D9C6378 83BC0000
37BDFFFF 41800044
849C0004 7F63DB78
2C040000 40A0FFEC
38840004
bl <arch.symbol>
2C030000 4080FFDC
7C6A1B78 7C7EE4AA
7FEFF120 819C0000
7F6BDB78 7D8803A6
4E800021 4BFFFFBC
BB610040 80010064
38210060 7C0803A6
4E800020


<arch.dict.init_default_events> NTSC 1.02
00000003
.long <<arch.init.event.flush>>
.long <<arch.init.event.static>>
.long <<arch.init.event.call>>

<arch.init.event.flush> NTSC 1.02
48000010 696E6974
2E666C75 73680000
7C0802A6 9421FFE0
90010024 BFC10010
83CA0000 3BEAFFFC
37DEFFFF 41800018
809F0004 847F0008
7C841850
bl <data.flush_IC>
4BFFFFE8 BBC10010
80010024 38210020
7C0803A6 4E800020


<arch.init.event.call> NTSC 1.02
48000010 696E6974
2E63616C 6C000000
7C0802A6 9421FFE0
90010024 BFA10010
7D7F5B78 7D5E5378
83BE0000 2C1D0000
4081002C 7C1D00D0
93BE0000 37BDFFFF
4180001C 849E0004
2C040000 7C8803A6
7FE3FB78 4DA00021
4BFFFFE4 BBA10010
80010024 38210020
7C0803A6 4E800020


<arch.init.event.static> NTSC 1.02
48000010 696E6974
2E737461 74696300
386AFFFC 808A0000
3484FFFF 4D800020
84A30008 80030004
90050000 4BFFFFEC


<data.flush_IC> NTSC 1.02
# Flush the instruction cache in given range
# - forces written ppc instructions to be newly-interpreted
# - required if writing new instructions over old instructions

# --- args:
# r3 = start address
# r4 = number of bytes to flush
b 0x8000543c