
Stage Swap Engine (v2.0)
Responsible for checking the current stage select screen and loading the appropriate pre-defined or random stage, as defined by the Stage Swap Info Table.

v2.0 of this code relocates the Stage Swap Table from the DOL to a file in the disc filesystem, and fixes random byte overwrites (when using 0xFF byte replacement mode).
[Achilles, DRGN]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<SwapTableFileString> ALL
# "StageSwapTable.bin" string (need a known address for this)
53746167 65537761
70546162 6C652E62
696E0000 00000000

NTSC 1.02 ---- 0x258720 ----- 8804000B -> Branch

# Main Logic; looks up data from the
# Stage Swap Table and prepares file loading
9421FFC0 BE810008
7C741B78 8AA4000B
lis r3, <<SwapTableFileString>>@h
ori r3, r3, <<SwapTableFileString>>@l
80830014 1EF50030
3AC4FFB0 7ED6BA14
3EE0803F 8AF70A20
3AF7FFCF 3B17000C
7F18B0AE 3F208040
9B19A2E5 3B170008
7F18B0AE 2C180000
41A2002C 7F15C378
2C15001A 40A20014
3F008040 82B8A280
3AB50021 48000010
2C150015 40A20008
3AA00000 1F170004
3B180010 7F16C02E
2C180000 41820080
3B370020 7F39B0AE
2C190000 41820070
2C1900FF 40820058
2C170000 41820060
38600000 3B200004
7F2903A6 1F370004
3B390020 7F59B0AE
2C1A0000 41820010
38630001 3B390001
4200FFEC 3C808038
60840580 7C8803A6
4E800021 1F370004
3B430020 7F5ACA14
7F3AB0AE 7F03C378
48000179 9B380000
48000184 1C95000C
3C60803E 60639960
7C63202E 3C80803E
3884FEDC 5463103A
7F03202E 83180008
2C180000 41820140
3B2000FF 2C150002
40A2000C 3F208040
8339A1DC 2C150003
40A2000C 3F208040
8339A1D4 2C150008
40A2000C 3F208040
8339A1E0 2C15001C
40A2000C 3F208040
8339A1D8 2C15001F
40A2000C 3F208040
8339A1E8 2C150020
40A2000C 3F208040
8339A1E4 3BE00000
2C1900FF 40A20008
480000CC 7F3ACB78
2C19000F 4180001C
3860000F 3C808038
60840580 7C8803A6
4E800021 7C791B78
2C19000A 4080000C
3B390030 48000008
3B390037 7F03C378
3880002E 3CA08032
60A55878 7CA803A6
4E800021 2C030000
40A2000C 38780004
48000008 38630001
3BFF0001 2C1F0001
40820008 4800005D
9B230000 7F03C378
9421FFC0 BE810008
3C808001 60846204
7C8803A6 4E800021
3C808033 6084796C
7C8803A6 4E800021
BA810008 38210040
2C03FFFF 40820018
2C1A000F 41800008
4BFFFF50 3B200000
4BFFFF3C 48000018
3CA08040 9065C260
88C30000 98C5C264
4E800020 B2B4001E
3E808025 6294BB48
7E8803A6 BA810008
38210040 4E800020

-------------- 0x14D10 ------ 807E0014 -> Branch

# Stage File Patches
809E0010 80840004
81C40000 3DE00006
61EFE64B 7C0E7800
4082002C 3DC00003
61CE20E8 7DC47214
3DE0C3BB 91EE0000
91EE0004 3DE043BB
91EE0008 91EE000C
4800013C 3DE00009
61EF5335 7C0E7800
408200E8 3E008040
89F0A2E5 55EF0631
418200A0 3DE04040
3A200000 6230F488
7DE4812E 6230F4CC
7DE4812E 6230F4D0
7DE4812E 6230F590
7DE4812E 3E000001
62100088 7DE4812E
3E000001 62100608
7DE4812E 3DE04248
6230F4D8 7DE4812E
3E000005 62101B90
7E24812E 3E200005
3DE0C3AA 61EF91EC
62301F20 7DE4812E
3DE043AA 61EF91EC
62301F60 7DE4812E
3DE0C3D0 61EF91EC
62301FA0 7DE4812E
3DE043D0 61EF91EC
62301FE0 7DE4812E
3DE08040 81CFA3A4
2C0E0000 41820028
81CFA3A0 99C47974
99C47B84 81CFA39C
99C47975 99C47B85
81CFA398 99C47976
99C47B86 48000048
3DE00016 61EF4B20
7C0E7800 40820038
3E008040 89F0A2E5
55EF0679 41820028
3DE00003 61EFDB88
7C8F2214 39E00000
91E40000 91E40004
91E40010 91E40014
91E40018 807E0014
48000000

-------------- 0x25FE58 ----- 986DB656 -> Branch

# Stage Swap Table Loader
7C0802A6 90010004
9421FF00 BC610008
lis r3, <<SwapTableFileString>>@h
ori r3, r3, <<SwapTableFileString>>@l
38800000
bl <DVD.read>
lis r3, <<SwapTableFileString>>@h
ori r3, r3, <<SwapTableFileString>>@l
90830014 B8610008
80010104 38210100
7C0803A6 986DB656
48000000

-------------- 0x3F9250 -----

00000000 803FC1FC
803FC1E0 803FA2B0
00000000 40400000
00000000 00000002
00000000 803FC208
803FC1E0 803FA2B4

 -> 

# Stage swap undo flag/address storage
5354414745205357415020464C414753
00000000000000000000000000000000
454E4420535441474520535741500000